language: python
env:
  global:
    - COMMIT_AUTHOR_EMAIL="philipp.sommer@unil.ch"
    - secure: "QocbcpzKkTWjFW8xKiws6W9cQrw+E+wY6dbH+IX7qnBw1OenPkInqMbquyNhmktPPEsnKfcZODDfHeXmvZYEdtTBWac1xMhT/ql4XiiEZY31JvXKsIRo/F6hcbVWjRFgl8vndv7IGiDaQAUys6VQ0yoS/0RRyIIzgzxb0mqedlZqGwc+hS50qXJSLM7TCgf8aFf7rrBK/I638Hq6GziAV8Zrg7dR+6CkaIkV9Lorz+suk/VcZSu1r1PCV4v54siY55FQhya/faEb4NPr5LGgtlLJ4v2trDxyc1jZTCbQtYm/rgpNP8KFMRHHPwlHBSjRHKdGiGnBwdPMKn7C//q0f/45ipnvVB439ku225juLO/ciq73FikOzmvlRCA+/FkR5QPdOhTmXLxrnvz5vKbaEoFncrwZwmh8cnAsCGEWly8RF2wieN1TeREMoDYi0AW5HO1E0tjcjN6ELBJUiw8WnxD0UufNHxUv0uv3g0Xug4JMQqj4qeNdvu1LL+XcqB4M/vnfgw9aZu0yU0PwBphg/xYzr+cMOxmds6SS9VYtYYL+HqQTuEWdlo4Vgk0gw9zfBL38Wxs+u4hcUYkpok0Nt+GTYm8wuQwKyCVbuEz17RLEIez62XWgN8nskFA4IrVDoC2/ADRWAg1cr2Z98aq0bpKOgXcXaBhtAhTofEhJE2o="
matrix:
    include:
        - python: 3.6
          env: MPL_VERSION=2.0
        - python: 3.6
          env: MPL_VERSION=1.5
        - python: 3.5
          env: MPL_VERSION=2.0
        - python: 3.5
          env: MPL_VERSION=1.5
        - python: 3.5
          env: MPL_VERSION=1.4
        - python: 2.7
          env: MPL_VERSION=2.0
        - python: 2.7
          env: MPL_VERSION=1.5
        - python: 2.7
          env: MPL_VERSION=1.4
before_install:
  # decrypt keys
  - openssl aes-256-cbc -K $encrypted_7fd3f220e342_key -iv $encrypted_7fd3f220e342_iv -in keys.tar.enc -out keys.tar -d
  - tar xvf keys.tar
  - sed -i "s/git@github.com:/https:\/\/${GH_REPO_TOKEN}@github.com\//" .gitmodules
git:
    submodules: false
install:
  # We do this conditionally because it saves us some downloading if the
  # version is the same.
  - if [[ "$TRAVIS_PYTHON_VERSION" == "2.7" ]]; then
      wget https://repo.continuum.io/miniconda/Miniconda2-latest-Linux-x86_64.sh -O miniconda.sh;
    else
      wget https://repo.continuum.io/miniconda/Miniconda3-latest-Linux-x86_64.sh -O miniconda.sh;
    fi
  # make sure we use an 'innocent' default matplotlib environment
  - touch matplotlibrc
  # setup conda environment
  - bash miniconda.sh -b -p $HOME/miniconda
  - export PATH="$HOME/miniconda/bin:$PATH"
  - pip install pyyaml  # is somehow not included in the current conda installation
  - hash -r
  - conda config --set always_yes yes --set changeps1 no
  - conda update -q conda
  # Useful for debugging any issues with conda
  - conda info -a
  - 'ENVKEY=py"${TRAVIS_PYTHON_VERSION}"_mpl"${MPL_VERSION}"'
  - conda env create -f tests/envs/environment_$ENVKEY.yml
  - source activate psyplot_$ENVKEY
  # add the keys (psy-simple-key and psy-simple-references-key)
  - 'chmod 600 psy-simple-*key && eval `ssh-agent -s` && ssh-add psy-simple-*key'
  # checkout references
  - 'export WORK=`pwd`'
  - 'export REFDIR=`python tests/get_ref_dir.py`'
  - 'export REFBRANCH=`python tests/get_ref_dir.py -b`'
  - git submodule update --init $REFDIR
  # use latest development version
  # NOTE: Remove this when psyplot is stable enough
  - git clone "https://github.com/Chilipp/psyplot.git" -b v1.0.0.dev0
  - cd psyplot && python setup.py install && cd .. && rm -rf psyplot
  # install coveralls
  - pip install coveralls
  # install psyplot
  - python setup.py install
  # export the environment for debugging
  - conda env export -n psyplot_$ENVKEY

before_script:
  - "export DISPLAY=:99.0"
  - "sh -e /etc/init.d/xvfb start"
  - sleep 3 # give xvfb some time to start

script:
  # create the necessary references
  - coverage run --source=psy_simple setup.py test -a "-v --ref" && python ci/check_ref_deploy.py
  # run the tests
  - cd $WORK && coverage run -a --source=psy_simple setup.py test -a "-v"

after_success:
  - coveralls

deploy:
  - provider: script
    script: ci/update_reference_submodule.py
    skip_cleanup: true
    on:
      condition: "-e deploy"
  - provider: script
    script: ci/update_submodules.py
    skip_cleanup: true
    on:
      condition: "-e deploy"
